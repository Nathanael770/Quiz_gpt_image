// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package quizimage.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	/**
	 * @deprecated
	 * The default constructor of the Microflows class should not be used.
	 * Use the static microflow invocation methods instead.
	 */
	@java.lang.Deprecated(since = "9.12", forRemoval = true)
	public Microflows() {}

	// These are the microflows for the QuizImage module
	public static void afficher_Resultat(IContext context, quizimage.proxies.Test _test)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Test", _test == null ? null : _test.getMendixObject());
		Core.microflowCall("QuizImage.Afficher_Resultat").withParams(params).execute(context);
	}
	public static void bad_Answer(IContext context, quizimage.proxies.Test _test)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Test", _test == null ? null : _test.getMendixObject());
		Core.microflowCall("QuizImage.Bad_Answer").withParams(params).execute(context);
	}
	public static void good_Answer(IContext context, quizimage.proxies.Test _test)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Test", _test == null ? null : _test.getMendixObject());
		Core.microflowCall("QuizImage.Good_Answer").withParams(params).execute(context);
	}
	public static void question_Suivante(IContext context, quizimage.proxies.Test _test)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Test", _test == null ? null : _test.getMendixObject());
		Core.microflowCall("QuizImage.Question_Suivante").withParams(params).execute(context);
	}
	public static quizimage.proxies.Image_false sUB_Rest(IContext context, quizimage.proxies.Test _test)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Test", _test == null ? null : _test.getMendixObject());
		IMendixObject result = (IMendixObject)Core.microflowCall("QuizImage.SUB_Rest").withParams(params).execute(context);
		return result == null ? null : quizimage.proxies.Image_false.initialize(context, result);
	}
}
